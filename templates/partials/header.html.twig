<script>
    document.addEventListener('DOMContentLoaded', function() {
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');
    const modal = document.getElementById('imageModal');
    const modalImg = document.getElementById('modalImage');
    const closeModal = document.getElementById('closeModal');

    // Mobile menu toggle
    if (mobileMenuButton && mobileMenu) {
        console.log('Mobile menu elements found'); // Debug log
        mobileMenuButton.addEventListener('click', function() {
            console.log('Mobile menu button clicked'); // Debug log
            console.log('Current mobile menu class:', mobileMenu.className); // Debug log
            
            // Toggle visibility using display property
            if (mobileMenu.style.display === 'none' || mobileMenu.style.display === '') {
                mobileMenu.style.display = 'block';
            } else {
                mobileMenu.style.display = 'none';
            }
            
            console.log('New mobile menu display:', mobileMenu.style.display); // Debug log
        });
    } else {
        console.log('Mobile menu elements not found'); // Debug log
    }

    // Image modal functionality
    if (modal && modalImg && closeModal) {
        // Add click handlers to all images
        document.querySelectorAll('.service-item img, .project-item img').forEach(img => {
            img.addEventListener('click', function() {
                modal.classList.remove('hidden');
                modalImg.src = this.src;
                document.body.style.overflow = 'hidden';
            });
        });

        // Close modal when clicking the close button
        closeModal.addEventListener('click', function() {
            modal.classList.add('hidden');
            document.body.style.overflow = 'auto';
        });

        // Close modal when clicking outside
        modal.addEventListener('click', function(e) {
            if (e.target === modal) {
                modal.classList.add('hidden');
                document.body.style.overflow = 'auto';
            }
        });
    }

    // Flash Messages Animation
    const flashMessages = document.querySelectorAll('.flash-message');
    flashMessages.forEach(message => {
        // Show message
        setTimeout(() => {
            message.classList.remove('opacity-0', 'translate-y-[-20px]');
            message.classList.add('opacity-100', 'translate-y-0');
        }, 100);

        // Auto dismiss after 5 seconds
        setTimeout(() => {
            message.classList.add('opacity-0', 'translate-y-[-20px]');
            setTimeout(() => {
                message.remove();
            }, 300);
        }, 5000);
    });
});
</script>

<!-- Header -->
<header class="w-full">
    <nav class="bg-primary-900 w-full py-5">
        <div class="w-full mx-auto px-4 sm:px-6 lg:px-8 py-2">
            <div class="flex items-center justify-between h-16 md:h-20">
                <div class="flex items-center">                   
                    <div class="flex pl-5 py-5">     
                        <a href="{{path('app_home')}}">
                            <span class="logo-header text-5xl text-VertSauge">Feuilles<br> & Racines </span>
                        </a>
                    </div>                
                </div>
                
                <!-- Mobile menu button -->
                <div class="md:hidden">
                    <button type="button" 
                            class="inline-flex items-center justify-center p-2 rounded-md text-VertSauge hover:text-VertSaugePale focus:ring-2 focus:ring-inset focus:ring-VertSauge"
                            id="mobile-menu-button"
                            aria-label="Toggle menu">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
                        </svg>
                    </button>
                </div>

                <!-- Desktop menu -->
                <div class="hidden md:block">
                    <div class="ml-10 flex items-baseline space-x-6">
                        <a href="{{path('app_home')}}" class="text-VertSaugePale hover:text-VertSauge px-3 py-2 text-lg font-bold">Accueil</a>
                        <a href="{{path('app_plants')}}" class="text-VertSaugePale hover:text-VertSauge px-3 py-2 text-lg font-bold">Nos plantes</a>
                        <a href="{{path('app_conseil')}}" class="text-VertSaugePale hover:text-VertSauge px-3 py-2 text-lg font-bold">Conseils</a>
                        <a href="#" class="text-VertSaugePale hover:text-VertSauge px-3 py-2 text-lg font-bold">A propos</a>
                    </div>
                </div>
            </div>
        </div>

        <!-- Mobile menu -->
        <div class="w-full md:hidden" id="mobile-menu" style="display: none;">
            <div class="px-2 pt-2 pb-3 space-y-1 sm:px-3 bg-primary-900">
                <a href="{{path('app_home')}}" class="text-VertSaugePale hover:text-VertSauge block px-3 py-2 text-base font-bold text-center">Accueil</a>
                <a href="{{path('app_plants')}}" class="text-VertSaugePale hover:text-VertSauge block px-3 py-2 text-base font-bold text-center">Nos plantes</a>
                <a href="{{path('app_conseil')}}" class="text-VertSaugePale hover:text-VertSauge block px-3 py-2 text-base font-bold text-center">Conseils</a>
                <a href="#" class="text-VertSaugePale hover:text-VertSauge block px-3 py-2 text-base font-bold text-center">A propos</a>
            </div>
        </div>
    </nav>
</header>

<!-- Flash messages -->
<div id="flash-messages" class="fixed top-4 right-4 z-50 space-y-4">
    {% for label, messages in app.flashes %}
        {% for message in messages %}
            <div class="flash-message transform transition-all duration-300 ease-in-out opacity-0 translate-y-[-20px]"
                 data-type="{{ label }}">
                <div class="rounded-lg p-4 shadow-lg {% if label == 'success' %}bg-green-500{% elseif label == 'error' %}bg-red-500{% else %}bg-blue-500{% endif %} text-white">
                    <div class="flex items-center">
                        <div class="flex-shrink-0">
                            {% if label == 'success' %}
                                <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                                </svg>
                            {% elseif label == 'error' %}
                                <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                                </svg>
                            {% endif %}
                        </div>
                        <div class="ml-3">
                            <p class="text-sm font-medium">{{ message }}</p>
                        </div>
                        <div class="ml-auto pl-3">
                            <button class="inline-flex text-white hover:text-gray-200 focus:outline-none" onclick="this.parentElement.parentElement.parentElement.parentElement.remove()">
                                <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                                </svg>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        {% endfor %}
    {% endfor %}
</div>